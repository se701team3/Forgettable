// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders CustomAvatarCollection UI to test correct hierarchy 1`] = `
<React.Fragment>
  <div
    className="MiniPersonProfile"
  >
    <Link
      style={
        Object {
          "textDecoration": "none",
        }
      }
      to={
        Object {
          "pathname": "/person/undefined",
          "state": Object {
            "person": Object {
              "img": "https://images.unsplash.com/photo-1646936218155-caedb4ed9bf7?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1974&q=80",
              "name": "Kent Dodds",
            },
          },
        }
      }
    >
      <ForwardRef(Avatar)
        alt="Kent Dodds"
        src={null}
        sx={
          Object {
            "height": "30px",
            "width": "30px",
          }
        }
      >
        KD
      </ForwardRef(Avatar)>
    </Link>
    <p
      data-testid="name-element"
    >
      Kent Dodds
    </p>
  </div>
  <div
    className="MiniPersonProfile"
  >
    <Link
      style={
        Object {
          "textDecoration": "none",
        }
      }
      to={
        Object {
          "pathname": "/person/undefined",
          "state": Object {
            "person": Object {
              "img": "https://images.unsplash.com/photo-1600010437709-10176a56ea45?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=765&q=80",
              "name": "Jed Watson",
            },
          },
        }
      }
    >
      <ForwardRef(Avatar)
        alt="Jed Watson"
        src={null}
        sx={
          Object {
            "height": "30px",
            "width": "30px",
          }
        }
      >
        JW
      </ForwardRef(Avatar)>
    </Link>
    <p
      data-testid="name-element"
    >
      Jed Watson
    </p>
  </div>
  <div
    className="MiniPersonProfile"
  >
    <Link
      style={
        Object {
          "textDecoration": "none",
        }
      }
      to={
        Object {
          "pathname": "/person/undefined",
          "state": Object {
            "person": Object {
              "img": "https://images.unsplash.com/photo-1646936218590-91d949706cb5?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80",
              "name": "Marley George",
            },
          },
        }
      }
    >
      <ForwardRef(Avatar)
        alt="Marley George"
        src={null}
        sx={
          Object {
            "height": "30px",
            "width": "30px",
          }
        }
      >
        MG
      </ForwardRef(Avatar)>
    </Link>
    <p
      data-testid="name-element"
    >
      Marley George
    </p>
  </div>
  <div
    className="MiniPersonProfile"
  >
    <Link
      style={
        Object {
          "textDecoration": "none",
        }
      }
      to={
        Object {
          "pathname": "/person/undefined",
          "state": Object {
            "person": Object {
              "name": "Jack Winston",
            },
          },
        }
      }
    >
      <ForwardRef(Avatar)
        alt="Jack Winston"
        src={null}
        sx={
          Object {
            "height": "30px",
            "width": "30px",
          }
        }
      >
        JW
      </ForwardRef(Avatar)>
    </Link>
    <p
      data-testid="name-element"
    >
      Jack Winston
    </p>
  </div>
  <div
    className="MiniPersonProfile"
  >
    <Link
      style={
        Object {
          "textDecoration": "none",
        }
      }
      to={
        Object {
          "pathname": "/person/undefined",
          "state": Object {
            "person": Object {
              "name": "John Doe",
            },
          },
        }
      }
    >
      <ForwardRef(Avatar)
        alt="John Doe"
        src={null}
        sx={
          Object {
            "height": "30px",
            "width": "30px",
          }
        }
      >
        JD
      </ForwardRef(Avatar)>
    </Link>
    <p
      data-testid="name-element"
    >
      John Doe
    </p>
  </div>
</React.Fragment>
`;
